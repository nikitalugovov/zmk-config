/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        arrow: arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GREATER_THAN>;
            label = "ARROW";
        };

        fat_arrow: fat_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "FAT_ARROW";
        };
    };

    combos {
        compatible = "zmk,combos";

        jk-escape {
            bindings = <&kp ESCAPE>;
            key-positions = <32 31>;
            layers = <0 1 2 3>;
        };

        jspace-enter {
            bindings = <&kp ENTER>;
            key-positions = <31 54>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   |   `   |
            // |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   -   |
            // |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
            // | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "["  |  |  "]"  |  N   |  M    |  ,    |  .   |   /   | SHIFT |
            //                     | ALT  | GUI  | LOWER|  SPACE |  | ENTER | RAISE| BSPC  | GUI   |

            bindings = <
&kp GRAVE   &kp LC(N1)  &kp LC(N2)  &kp LG(SPACE)  &kp LC(N4)    &kp LC(N5)                                 &kp LC(N6)            &kp LC(N7)  &kp LC(SPACE)  &kp LC(NUMBER_9)  &kp LC(NUMBER_0)  &kp LS(LG(M))
&kp TAB     &kp Q       &kp W       &kp E          &kp R         &kp T                                      &kp Y                 &kp U       &kp I          &kp O             &kp P             &kp EQUAL
&kp ESCAPE  &lt 1 A     &kp S       &kp D          &kp F         &kp G                                      &kp H                 &kp J       &kp K          &kp L             &kp SEMICOLON     &kp SQT
&sl 2       &kp Z       &kp X       &kp C          &kp V         &kp B       &kp BACKSPACE     &kp ENTER    &kp N                 &kp M       &kp COMMA      &kp DOT           &kp SLASH         &kp MINUS
                                    &kp LEFT_ALT   &kp LEFT_ALT  &kp LGUI    &kp LEFT_SHIFT    &lt 1 SPACE  &kp LA(LEFT_CONTROL)  &kp LCTRL   &kp LCTRL
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        nav_layer {
            // --------------------------------------------------------------------------------------------------------------
            // | LPAD  | BRDn | BRUp |  MUT |  Vo- |  Vo+ |                   |      |       |       |      |       |       |
            // |  F1   |  F2  |  F3  |  F4  |  F5  |  F6  |                   |  F7  |  F8   |  F9   |  F10 |  F11  |  F12  |
            // |   `   |  !   |  @   |  #   |  $   |  %   |                   |  ^   |  &    |  *    |  (   |   )   |   ~   |
            // |       |      |      |      |      |      |        |  |       |      |  _    |  +    |  {   |   }   |  "|"  |
            //                       |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans  &kp C_BRI_DN  &kp C_BRI_UP  &kp LS(LG(NUMBER_4))  &trans  &trans                                   &trans        &trans              &kp C_PLAY_PAUSE  &kp C_PREV     &kp C_NEXT  &kp LC(C_MUTE)
&trans  &trans        &trans        &trans                &trans  &trans                                   &kp LA(LEFT)  &kp LA(DOWN_ARROW)  &kp LA(UP_ARROW)  &kp LA(RIGHT)  &trans      &kp C_VOL_UP
&trans  &trans        &trans        &trans                &trans  &trans                                   &kp LEFT      &kp DOWN            &kp UP_ARROW      &kp RIGHT      &trans      &kp C_VOLUME_DOWN
&trans  &trans        &trans        &trans                &trans  &trans             &kp DELETE    &trans  &kp LC(LEFT)  &kp LC(DOWN)        &kp LC(UP_ARROW)  &kp LC(RIGHT)  &trans      &trans
                                    &trans                &trans  &kp RIGHT_CONTROL  &trans        &trans  &trans        &kp RIGHT_GUI       &kp RIGHT_GUI
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        symbols_layer {
            // ------------------------------------------------------------------------------------------------------------
            // |       |     |     |      |      |      |                   |      |       |       |      |       |       |
            // |   `   |  1  |  2  |  3   |  4   |  5   |                   |  6   |   7   |   8   |  9   |   0   |       |
            // |   F1  |  F2 |  F3 |  F4  |  F5  |  F6  |                   |      |   <-  |   v   |  ^   |  ->   |       |
            // |   F7  |  F8 |  F9 |  F10 |  F11 |  F12 |        |  |       |  +   |   -   |   =   |  [   |   ]   |   \   |
            //                     |      |      |      |        |  |       |      |       |       |

            bindings = <
&trans     &kp F1       &kp F2       &kp F3        &kp F4         &kp F5                                    &kp F6                 &kp F7  &kp F8  &kp F9  &kp F10        &trans
&kp TILDE  &kp EXCL     &kp AT_SIGN  &kp ASTERISK  &kp AMPERSAND  &kp LEFT_BRACE                            &kp RIGHT_BRACE        &kp N7  &kp N8  &kp N9  &kp COLON      &kp PLUS
&trans     &kp PERCENT  &kp CARET    &kp HASH      &kp DOLLAR     &kp LBKT                                  &kp RIGHT_BRACKET      &kp N4  &kp N5  &kp N6  &kp NUMBER_0   &kp GRAVE
&trans     &trans       &trans       &fat_arrow    &arrow         &kp LEFT_PARENTHESIS  &kp F11    &kp F12  &kp RIGHT_PARENTHESIS  &kp N1  &kp N2  &kp N3  &kp BACKSLASH  &kp PIPE
                                     &trans        &trans         &trans                &trans     &trans   &trans                 &trans  &trans
            >;

            sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
        };

        adjust_layer {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4                    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans                          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans        &trans    &trans  &trans  &trans  &trans
            >;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        adjust {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
